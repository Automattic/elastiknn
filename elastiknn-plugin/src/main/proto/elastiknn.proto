syntax = "proto3";

package klibisz.elastiknn;

option java_package = "com.klibisz.elastiknn";

import "scalapb/scalapb.proto";

enum Distance {
    DISTANCE_INVALID = 0;
    DISTANCE_L1 = 1;
    DISTANCE_L2 = 2;
    DISTANCE_ANGULAR = 3;
    DISTANCE_HAMMING = 4;
    DISTANCE_JACCARD = 5;
}

message ProcessorOptions {
    // Path to the field where the raw floating-point vector is stored.
    string field_raw = 1;
    // Path to the field where the processed version of the vector is stored.
    string field_processed = 2;
    // Dimensionality of the raw floating-point vector.
    int32 dimension = 3;
    // The model options which will determine how the vector gets preprocessed and stored.
    oneof model_options {
        ExactModelOptions exact = 4;
        LshModelOptions lsh = 5;
    }
}

message ExactModelOptions {}

message LshModelOptions {
    // Hash functions for hashing incoming vectors are determined by this seed.
    int64 seed = 1;

    // The distance function used for queries. This has to be given up-front as it determines how the vector gets processed.
    Distance distance = 2;

    // Placeholders.. need to come back and get the exact lsh parameters straight. It's been a while since I learned it.
    int32 k = 3;
    int32 L = 4;
}

// Structure of vectors which have been processed.
message ProcessedVector {
    message ExactVector {
        repeated float vector = 1 [(scalapb.field).collection_type="Array"];
    }

    oneof processed {
        ExactVector exact = 1;
    }
}


// Body and options for the elastiknn_knn query.
message KNearestNeighborsQuery {
    message ExactQueryOptions {
        Distance distance = 1;
    }

    message LshQueryOptions {}

    message GivenQueryVector {
        string vector = 1;
    }

    message IndexedQueryVector {
        string index = 1;
        string field = 2;
        string id = 3;
    }

    string pipeline_id = 1;

    oneof query_options {
        ExactQueryOptions exact = 2;
        LshQueryOptions lsh = 3;
    }

    oneof query_vector {
        GivenQueryVector given = 4;
        IndexedQueryVector indexed = 5;
    }
}